#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.59)
AC_INIT([obby], [0.2.0], [crew@0x539.de])
AM_INIT_AUTOMAKE(1.9 check-news)
AC_CONFIG_SRCDIR([inc/buffer.hpp])
AC_CONFIG_HEADER([inc/config.hpp])

# Extract host information.
AC_CANONICAL_HOST

# Checks for programs.
AC_PROG_CXX
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_LIBTOOL_WIN32_DLL
AC_PROG_LIBTOOL
AC_CACHE_SAVE

# Let the user choose if he wants libhowl support or not (default to no).
extra_requires=""
AC_ARG_WITH([howl],
	    AS_HELP_STRING([--with-howl],
			   [support Zeroconf through libhowl [[default=no]]]),
	    [ac_cv_use_howl=$withval], [ac_cv_use_howl=no])
AC_CACHE_CHECK([whether to use howl], [ac_cv_use_howl], [ac_cv_use_howl=no])
if test "x$ac_cv_use_howl" != "xno" ; then
	extra_requires="howl"
	AC_DEFINE([WITH_HOWL], 1, [Define whether to use howl.])
fi
AC_SUBST(extra_requires)
AM_CONDITIONAL(WITH_HOWL, test x$ac_cv_use_howl != xno)

# WIN32 build checks
AC_MSG_CHECKING([whether to enable WIN32 specific flags])
if test "x$host_os" = "xmingw32" ; then
        win32=true
        AC_MSG_RESULT([yes])
else
        win32=false
        AC_MSG_RESULT([no])
fi
AM_CONDITIONAL(WIN32, test x$win32 = xtrue)

# Allow to disable the build of the tests.
AC_ARG_ENABLE([tests],
	      AS_HELP_STRING([--enable-tests],
			     [enable the build of the tests]),
	      [ac_cv_build_tests=$enableval], [ac_cv_build_tests=no])
AC_CACHE_CHECK([whether to build the tests], [ac_cv_build_tests],
	       [ac_cv_build_tests=no])
AM_CONDITIONAL(BUILD_TESTS, test x$ac_cv_build_tests != xno)

# Checks for libraries.
PKG_CHECK_MODULES([libobby], [sigc++-2.0 net6-1.0])
if test "x$ac_cv_use_howl" != "xno" ; then
	PKG_CHECK_MODULES([libhowl], [howl])
fi

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST

AC_CONFIG_FILES([Makefile])
AC_OUTPUT([inc/Makefile src/Makefile test/Makefile obby-1.0.pc])

